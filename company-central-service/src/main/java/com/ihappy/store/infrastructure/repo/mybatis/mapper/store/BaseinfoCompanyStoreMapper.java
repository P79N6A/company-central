package com.ihappy.store.infrastructure.repo.mybatis.mapper.store;

import com.ihappy.company.domain.dbdo.BaseinfoCompany;
import com.ihappy.store.domain.bo.store.*;
import com.ihappy.store.domain.dbdo.store.BaseinfoCompanyStore;
import com.ihappy.store.domain.dto.request.store.StoreListQueryReqDTO;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

/**
 *
 */
public interface BaseinfoCompanyStoreMapper {
    /**
     * 根据条件查询
     * @param record
     * @return
     */
    List<BaseinfoCompanyStore> selectSelective(BaseinfoCompanyStore record);
    /**
     * 根据门店id列表查询
     * @param map
     * @return
     */
    List<BaseinfoCompanyStore> selectByStoreIds(Map<String, Object> map);
    /**
     * 查询门店
     * @param record
     * @return
     */
    BaseinfoCompanyStore selectByStoreIdAndCompId(BaseinfoCompanyStore record);
    /**
     * 修改打印ip和端口
     * @param record
     * @return
     */
    Integer updatePrintIpAndPort(BaseinfoCompanyStore record);
    /**
     * 根据 公司id和门店id列表查询 门店列表
     * @param compId  必须 storeIds 门店id列表  isPublic null 所有 0：不查询总店 1：只查询总店
     * @return
     */
    List<BaseinfoCompanyStore> selectByCompIdAndStoreIds(Map<String, Object> map);

    /**
     * 根据 公司id查询 门店列表
     * @param compId  必须
     * @return
     */
    List<BaseinfoCompanyStore> selectByCompId(@Param("compId") Integer compId);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table baseinfo_company_store
     *
     * @mbg.generated Tue Apr 10 16:49:15 CST 2018
     */
    int deleteByPrimaryKey(Long storeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table baseinfo_company_store
     *
     * @mbg.generated Tue Apr 10 16:49:15 CST 2018
     */
    int insertSelective(BaseinfoCompanyStore record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table baseinfo_company_store
     *
     * @mbg.generated Tue Apr 10 16:49:15 CST 2018
     */
    BaseinfoCompanyStore selectByPrimaryKey(Long storeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table baseinfo_company_store
     *
     * @mbg.generated Tue Apr 10 16:49:15 CST 2018
     */
    int updateByPrimaryKeySelective(BaseinfoCompanyStore record);

    /**
     *   根据Id集合查询微商铺信息
     * @param companyStore
     * @return
     */
    List<BaseinfoCompanyStore> selectCompanyStoreWeshopByIds(CompanyStoreListQueryByStoreIdsReqBo companyStore);

    /**
     * 查询门店信息
     * @param storeInfoQueryBO
     * @return
     */
    List<BaseinfoCompanyStore> queryStoreInfoByInfoList(StoreInfoQueryBO storeInfoQueryBO);

    /**
     *   查询门店名称查询门店信息
     * @param companyStore
     * @return
     */
    List<BaseinfoCompanyStore> queryStoreByStoreName(BaseinfoCompanyStore companyStore);
    /**
     * 删除企业门店
     * @param baseinfoCompanyStore
     * @return
     */
    int deleteCompanyStore(BaseinfoCompanyStore baseinfoCompanyStore);

    /**
     * 门店名称是否重复
     * @param checkStoreNameBO
     * @return
     */
    List<BaseinfoCompanyStore> checkStoreNameIsExist(CheckStoreNameBO checkStoreNameBO);

    /**
     * 查询门店列表
     * @param storeListQueryReqDTO
     * @return
     */
    List<BaseinfoCompanyStore> selectStoreList(StoreListQueryReqDTO storeListQueryReqDTO);

    /**
     * 根据公司id查询门店名称
     * @param storeNamesQueryBO
     * @return
     */
    String selectStoreNamesByCompId(StoreNamesQueryBO storeNamesQueryBO);

    /**
     * 根据门店id更新门店状态
     * @param storeInfoBO
     * @return
     */
    Integer updateStoreState(StoreInfoBO  storeInfoBO);

    /**
     * 根据公司id查询门店名称
     * @param storeInfoBO
     * @return
     */
    List<BaseinfoCompanyStore> queryStoreNames(StoreInfoBO  storeInfoBO);

    Integer selectStorePayCount(StoreInfoQueryBO bo);

    List<StoreInfoBO> selectStorePayPage(StoreInfoQueryBO bo);

    /**
     * 更新服务时间
     * @param record
     * @return
     */
    int updateStoreExpireDate(UpdateStoreExpireDateBO record);
}