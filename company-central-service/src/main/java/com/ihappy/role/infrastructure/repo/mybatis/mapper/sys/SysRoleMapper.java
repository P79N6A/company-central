package com.ihappy.role.infrastructure.repo.mybatis.mapper.sys;

import com.ihappy.role.domain.bo.CheckRoleNameBO;
import com.ihappy.role.domain.bo.SysRoleManageBO;
import com.ihappy.role.domain.dbdo.sys.SysRole;

import java.util.List;

public interface SysRoleMapper {
    /**
     * 根据角色id数组查询角色列表
     *
     * @param roleIdList
     * @return
     */
    List<SysRole> selectByPrimaryKeyList(List<Long> roleIdList);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_role
     *
     * @mbg.generated Sun Jun 17 14:14:37 CST 2018
     */
    int deleteByPrimaryKey(Long roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_role
     *
     * @mbg.generated Sun Jun 17 14:14:37 CST 2018
     */
    int insert(SysRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_role
     *
     * @mbg.generated Sun Jun 17 14:14:37 CST 2018
     */
    int insertSelective(SysRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_role
     *
     * @mbg.generated Sun Jun 17 14:14:37 CST 2018
     */
    SysRole selectByPrimaryKey(Long roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_role
     *
     * @mbg.generated Sun Jun 17 14:14:37 CST 2018
     */
    int updateByPrimaryKeySelective(SysRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_role
     *
     * @mbg.generated Sun Jun 17 14:14:37 CST 2018
     */
    int updateByPrimaryKey(SysRole record);

    /**
     * 查询运营后台角色管理角色列表
     *
     * @param sysRoleManageBO
     * @return
     */
    List<SysRole> selectSysRoleManagePage(SysRoleManageBO sysRoleManageBO);

    /***
     *      查询运营后台角色管理角色列表角色数量
     * @param sysRoleManageBO
     * @return
     */
    Integer selectSysRoleManagePageRoleCount(SysRoleManageBO sysRoleManageBO);

    /**
     * 查询运营后台不是这个角色ID的角色名称
     *
     * @param checkRoleNameBO
     * @return
     */
    SysRole selectCheckRoleNameIsOrNotRepeat(CheckRoleNameBO checkRoleNameBO);

    /**
     * 根据角色ID查询运营后台角色管理角色详情
     *
     * @param sysRoleManageBO
     * @return
     */
    SysRole selectSysRoleManageRoleInfoByRoleId(SysRoleManageBO sysRoleManageBO);

    /**
     * 添加运营后台角色管理角色信息
     *
     * @param sysRoleManageBO
     * @return
     */
    Integer addSysRoleManageRoleInfo(SysRoleManageBO sysRoleManageBO);

    /**
     * 根据角色ID修改运营后台角色详情
     *
     * @param sysRoleManageBO
     * @return
     */
    Integer updateSysRoleManageRoleInfoByRoleId(SysRoleManageBO sysRoleManageBO);

    /**
     * 根据角色ID修改运营后台角色管理角色信息is_deleted=1
     */
    Integer deleteSysRoleManageRoleInfoByRoleId(SysRoleManageBO sysRoleManageBO);


}