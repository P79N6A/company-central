package com.ihappy.role.infrastructure.repo.mybatis.mapper.sys;

import com.ihappy.role.domain.bo.SysCompanyRoleBO;
import com.ihappy.role.domain.bo.SysCompanyRoleConfigBO;
import com.ihappy.role.domain.dbdo.sys.SysCompanyRole;

import java.util.List;

public interface SysCompanyRoleMapper {
    /**
     * 根据角色id数组查询角色列表
     *
     * @param roleIdList
     * @return
     */
    List<SysCompanyRole> selectByPrimaryKeyList(List<Long> roleIdList);

    /**
     * 查询所有角色列表
     *
     * @return
     */
    List<SysCompanyRole> selectAllList();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_company_role
     *
     * @mbg.generated Wed Apr 04 13:40:00 CST 2018
     */
    int deleteByPrimaryKey(Long roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_company_role
     *
     * @mbg.generated Wed Apr 04 13:40:00 CST 2018
     */
    int insert(SysCompanyRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_company_role
     *
     * @mbg.generated Wed Apr 04 13:40:00 CST 2018
     */
    int insertSelective(SysCompanyRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_company_role
     *
     * @mbg.generated Wed Apr 04 13:40:00 CST 2018
     */
    SysCompanyRole selectByPrimaryKey(Long roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_company_role
     *
     * @mbg.generated Wed Apr 04 13:40:00 CST 2018
     */
    int updateByPrimaryKeySelective(SysCompanyRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_company_role
     *
     * @mbg.generated Wed Apr 04 13:40:00 CST 2018
     */
    int updateByPrimaryKey(SysCompanyRole record);

    /**
     * 查询运营后台角色配置角色列表
     *
     * @param sysCompanyRoleConfigBO
     * @return
     */
    List<SysCompanyRole> selectSysCompanyRoleConfigList(SysCompanyRoleConfigBO sysCompanyRoleConfigBO);

    /**
     * 查询系统公司角色列表
     *
     * @param sysCompanyRoleConfigBO
     * @return
     */
    List<SysCompanyRole> selectSysCompanyRoleList(SysCompanyRoleConfigBO sysCompanyRoleConfigBO);

    /**
     * 查询运营后台角色配置角色列表角色数量
     *
     * @param sysCompanyRoleConfigBO
     * @return
     */
    Integer selectSysCompanyRoleConfigListRoleCount(SysCompanyRoleConfigBO sysCompanyRoleConfigBO);

    /**
     * 查询运营后台角色配置角色详情
     *
     * @param sysCompanyRoleConfigBO
     * @return
     */
    SysCompanyRole selectSysCompanyRoleConfigRoleInfoByRoleId(SysCompanyRoleConfigBO sysCompanyRoleConfigBO);

    /**
     * 根据角色ID修改运营后台角色配置角色详情
     *
     * @param sysCompanyRoleConfigBO
     * @return
     */
    Integer updateSysCompanyRoleConfigRoleInfoByRoleId(SysCompanyRoleConfigBO sysCompanyRoleConfigBO);

    /**
     * 根据角色ID修改运营后台角色配置角色信息is_deleted=1
     *
     * @param sysCompanyRoleConfigBO
     * @return
     */
    Integer deleteSysCompanyRoleConfigRoleInfoByRoleId(SysCompanyRoleConfigBO sysCompanyRoleConfigBO);

    /**
     * 检查系统公司角色名称是否重复
     *
     * @param sysCompanyRoleConfigBO
     * @return
     */
    SysCompanyRole checkSysCompanyRoleNameIsOrNotExisit(SysCompanyRoleConfigBO sysCompanyRoleConfigBO);

    /**
     * 添加运营后台角色配置角色添加
     *
     * @param sysCompanyRoleConfigBO
     * @return
     */
    Integer addSysCompanyRoleConfigRole(SysCompanyRoleConfigBO sysCompanyRoleConfigBO);

    /**
     * app-管理-角色管理-角色列表-查询系统公司角色列表
     *
     * @param sysCompanyRoleBO
     * @return
     */
    List<SysCompanyRole> selectSyCompanyRoleList(SysCompanyRoleBO sysCompanyRoleBO);

    /**
     * app-管理-角色管理-角色列表-查询系统公司角色详情
     */
    SysCompanyRole selectSysCompanyRoleInfo(SysCompanyRoleBO sysCompanyRoleBO);
    /**
     * 查询不是这些角色名称的角色列表
     */
    List<SysCompanyRole> queryRoleListByCondition(SysCompanyRoleBO sysCompanyRoleBO);
}