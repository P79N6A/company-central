<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ihappy.role.infrastructure.repo.mybatis.mapper.sys.SysCompanyRoleMapper">
    <resultMap id="BaseResultMap" type="com.ihappy.role.domain.dbdo.sys.SysCompanyRole">
        <id column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_no" jdbcType="VARCHAR" property="roleNo"/>
        <result column="role_memo" jdbcType="VARCHAR" property="roleMemo"/>
        <result column="role_rights" jdbcType="VARCHAR" property="roleRights"/>
        <result column="role_sort" jdbcType="INTEGER" property="roleSort"/>
        <result column="created_at" jdbcType="BIGINT" property="createdAt"/>
        <result column="updated_at" jdbcType="BIGINT" property="updatedAt"/>
        <result column="created_person_id" jdbcType="BIGINT" property="createdPersonId"/>
        <result column="updated_person_id" jdbcType="BIGINT" property="updatedPersonId"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
        <result column="is_hide" jdbcType="BIT" property="isHide"/>
    </resultMap>
    <sql id="Base_Column_List">
    role_id, role_name, role_no, role_memo, role_rights, role_sort, created_at, updated_at, 
    created_person_id, updated_person_id, is_deleted,is_hide
  </sql>

    <select id="selectByPrimaryKeyList" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_company_role
        where is_deleted = 0
        <if test="list != null and list.size > 0">
            and role_id in
            <foreach collection="list" index="roleIdList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="selectAllList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_company_role
        where is_deleted = 0
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_company_role
        where role_id = #{roleId,jdbcType=BIGINT} and is_deleted = 0
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_company_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.ihappy.role.domain.dbdo.sys.SysCompanyRole">
    insert into sys_company_role (role_id, role_name, role_no, 
      role_memo, role_rights, role_sort, 
      created_at, updated_at, created_person_id, 
      updated_person_id, is_deleted,is_hide)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleNo,jdbcType=VARCHAR}, 
      #{roleMemo,jdbcType=VARCHAR}, #{roleRights,jdbcType=VARCHAR}, #{roleSort,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=BIGINT}, #{updatedAt,jdbcType=BIGINT}, #{createdPersonId,jdbcType=BIGINT}, 
      #{updatedPersonId,jdbcType=BIGINT}, #{isDeleted,jdbcType=BIT}, #{isHide,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" parameterType="com.ihappy.role.domain.dbdo.sys.SysCompanyRole">
        insert into sys_company_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleNo != null">
                role_no,
            </if>
            <if test="roleMemo != null">
                role_memo,
            </if>
            <if test="roleRights != null">
                role_rights,
            </if>
            <if test="roleSort != null">
                role_sort,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="createdPersonId != null">
                created_person_id,
            </if>
            <if test="updatedPersonId != null">
                updated_person_id,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="isHide != null">
                is_hide,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleNo != null">
                #{roleNo,jdbcType=VARCHAR},
            </if>
            <if test="roleMemo != null">
                #{roleMemo,jdbcType=VARCHAR},
            </if>
            <if test="roleRights != null">
                #{roleRights,jdbcType=VARCHAR},
            </if>
            <if test="roleSort != null">
                #{roleSort,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=BIGINT},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=BIGINT},
            </if>
            <if test="createdPersonId != null">
                #{createdPersonId,jdbcType=BIGINT},
            </if>
            <if test="updatedPersonId != null">
                #{updatedPersonId,jdbcType=BIGINT},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
            <if test="isHide != null">
                #{isHide,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ihappy.role.domain.dbdo.sys.SysCompanyRole">
        update sys_company_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleNo != null">
                role_no = #{roleNo,jdbcType=VARCHAR},
            </if>
            <if test="roleMemo != null">
                role_memo = #{roleMemo,jdbcType=VARCHAR},
            </if>
            <if test="roleRights != null">
                role_rights = #{roleRights,jdbcType=VARCHAR},
            </if>
            <if test="roleSort != null">
                role_sort = #{roleSort,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=BIGINT},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=BIGINT},
            </if>
            <if test="createdPersonId != null">
                created_person_id = #{createdPersonId,jdbcType=BIGINT},
            </if>
            <if test="updatedPersonId != null">
                updated_person_id = #{updatedPersonId,jdbcType=BIGINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=BIGINT} and is_deleted = 0
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ihappy.role.domain.dbdo.sys.SysCompanyRole">
    update sys_company_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_no = #{roleNo,jdbcType=VARCHAR},
      role_memo = #{roleMemo,jdbcType=VARCHAR},
      role_rights = #{roleRights,jdbcType=VARCHAR},
      role_sort = #{roleSort,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=BIGINT},
      updated_at = #{updatedAt,jdbcType=BIGINT},
      created_person_id = #{createdPersonId,jdbcType=BIGINT},
      updated_person_id = #{updatedPersonId,jdbcType=BIGINT},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
    <select id="selectSysCompanyRoleConfigList" parameterType="com.ihappy.role.domain.bo.SysCompanyRoleConfigBO"
            resultMap="BaseResultMap">
        select  <include refid="Base_Column_List"/> from sys_company_role where is_deleted = 0
        <if test="keyWords != null and keyWords != ''">
            and role_name like concat(#{keyWords},'%')
        </if>
        order by role_id asc limit #{limit} offset #{offset}

    </select>
    <select id="selectSysCompanyRoleList" parameterType="com.ihappy.role.domain.bo.SysCompanyRoleConfigBO"
            resultMap="BaseResultMap">
        select  <include refid="Base_Column_List"/> from sys_company_role where is_deleted = 0
    </select>
    <select id="selectSysCompanyRoleConfigListRoleCount"
            parameterType="com.ihappy.role.domain.bo.SysCompanyRoleConfigBO"
            resultType="java.lang.Integer">
        select count(*) from sys_company_role where is_deleted = 0
        <if test="keyWords != null and keyWords != ''">
            and role_name like concat(#{keyWords},'%')
        </if>
        order by role_id asc
    </select>
    <select id="selectSysCompanyRoleConfigRoleInfoByRoleId"
            parameterType="com.ihappy.role.domain.bo.SysCompanyRoleConfigBO"
            resultMap="BaseResultMap">
    select  <include refid="Base_Column_List"/> from sys_company_role where role_id = #{roleId} and is_deleted = 0
  </select>
    <update id="updateSysCompanyRoleConfigRoleInfoByRoleId" flushCache="true"
            parameterType="com.ihappy.role.domain.bo.SysCompanyRoleConfigBO">
    update sys_company_role set role_name = #{roleName},role_Memo = #{roleMemo},
    role_rights = #{roleRights},updated_at=#{updatedAt},updated_person_id = #{updatedPersonId}
    where role_id = #{roleId} and is_deleted = 0
  </update>
    <update id="deleteSysCompanyRoleConfigRoleInfoByRoleId"
            parameterType="com.ihappy.role.domain.bo.SysCompanyRoleConfigBO">
        update sys_company_role set is_deleted = 1 ,updated_at=#{updatedAt},updated_person_id=#{updatedPersonId} where role_id = #{roleId} and is_deleted = 0
  </update>
    <select id="checkSysCompanyRoleNameIsOrNotExisit"
            parameterType="com.ihappy.role.domain.bo.SysCompanyRoleConfigBO" resultMap="BaseResultMap">
        select  <include refid="Base_Column_List"/> from sys_company_role where role_name = #{roleName}
        <if test="roleId != null">
            and role_id != #{roleId}
        </if>
        <if test="isDeleted != null">
            and is_deleted = #{isDeleted}
        </if>
    </select>
    <insert id="addSysCompanyRoleConfigRole" parameterType="com.ihappy.role.domain.bo.SysCompanyRoleConfigBO">
   insert into sys_company_role (role_id, role_name, role_no,
      role_memo, role_rights,
      created_at, created_person_id)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleNo,jdbcType=VARCHAR},
      #{roleMemo,jdbcType=VARCHAR}, #{roleRights,jdbcType=VARCHAR},
      #{createdAt,jdbcType=BIGINT},#{createdPersonId,jdbcType=BIGINT})
  </insert>
    <select id="selectSyCompanyRoleList" parameterType="com.ihappy.role.domain.bo.SysCompanyRoleBO"
            resultType="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_company_role where is_deleted = 0
        <if test="limit != null and offset != null " >
            limit #{limit} offset #{offset}
        </if>
    </select>
    <select id="selectSysCompanyRoleInfo" parameterType="com.ihappy.role.domain.bo.SysCompanyRoleBO" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from sys_company_role where  role_id = #{roleId}
        <if test="isDeleted != null">
            and is_deleted = #{isDeleted}
        </if>
    </select>
    <select id="queryRoleListByCondition" parameterType="com.ihappy.role.domain.bo.SysCompanyRoleBO" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from sys_company_role
        where   role_no != 1 and  role_no != 2 and is_deleted = 0
        order by role_sort asc , role_id
        desc
        <if test="limit != null and offset != null ">
            limit #{limit} offset #{offset}
        </if>
</select>
</mapper>